# Generated by Django 5.2.6 on 2025-09-09 15:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Art',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('year_specificity', models.CharField(blank=True, choices=[('exact', 'Exact'), ('year', 'Year'), ('decade', 'Decade'), ('century', 'Century'), ('millennium', 'Millennium'), ('unknown', 'Unknown')], max_length=50, null=True)),
                ('artist', models.CharField(blank=True, max_length=200, null=True)),
                ('culture', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('format', models.CharField(blank=True, max_length=100, null=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('techniques', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('photo', models.URLField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.BooleanField(default=False)),
                ('format', models.CharField(choices=[('hardcover', 'Hardcover'), ('paperback', 'Paperback'), ('ebook', 'eBook'), ('audiobook', 'Audiobook'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=200)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('genre', models.CharField(blank=True, max_length=50, null=True)),
                ('page_count', models.PositiveIntegerField(blank=True, null=True)),
                ('cover_image', models.URLField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExtrasCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilmCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.BooleanField(default=False)),
                ('format', models.CharField(choices=[('dvd', 'DVD'), ('blu-ray', 'Blu-ray'), ('4k', '4K'), ('vhs', 'VHS'), ('laserdisc', 'LaserDisc'), ('betamax', 'Betamax'), ('film', 'Film'), ('digital', 'Digital'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('director', models.CharField(blank=True, max_length=200, null=True)),
                ('release_year', models.PositiveIntegerField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=100, null=True)),
                ('length', models.DurationField(blank=True, null=True)),
                ('type', models.CharField(choices=[('movie', 'Movie'), ('series', 'Series'), ('documentary', 'Documentary'), ('short', 'Short Film'), ('other', 'Other')], max_length=50)),
                ('cover_art', models.URLField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('studio', models.CharField(blank=True, max_length=200, null=True)),
                ('runtime', models.DurationField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.BooleanField(default=False)),
                ('platform', models.CharField(choices=[('pc', 'PC'), ('playstation', 'PlayStation'), ('xbox', 'Xbox'), ('nintendo', 'Nintendo'), ('mobile', 'Mobile'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('developer', models.CharField(blank=True, max_length=200, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=50, null=True)),
                ('cover_art', models.URLField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.BooleanField(default=False)),
                ('format', models.CharField(choices=[('vinyl', 'Vinyl'), ('cd', 'CD'), ('cassette', 'Cassette'), ('8cm', '8CM'), ('digital', 'Digital'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('artist', models.CharField(max_length=200)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('catalog_number', models.CharField(blank=True, max_length=50, null=True)),
                ('genre', models.CharField(blank=True, max_length=100, null=True)),
                ('length', models.DurationField(blank=True, null=True)),
                ('type', models.CharField(choices=[('album', 'Album'), ('single', 'Single'), ('ep', 'EP'), ('live', 'Live'), ('compilation', 'Compilation'), ('other', 'Other')], max_length=50)),
                ('cover_art', models.URLField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('label', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wardrobe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('shirts', 'Shirts'), ('trousers', 'Trousers'), ('suits', 'Suits'), ('coats_jackets', 'Coats & Jackets'), ('shoes', 'Shoes'), ('neckwear', 'Neckwear'), ('knitwear', 'Knitwear'), ('hosiery', 'Hosiery'), ('underpinnings', 'Underpinnings'), ('shirt_accessories', 'Shirt Accessories'), ('leather_goods', 'Leather Goods'), ('hats', 'Hats'), ('tools_essentials', 'Gentlemans Tools & Essentials'), ('other', 'Other')], max_length=50)),
                ('brands', models.JSONField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('style', models.CharField(blank=True, max_length=100, null=True)),
                ('colour', models.JSONField(blank=True, null=True)),
                ('pictures', models.JSONField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('preferred_quantity', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Watch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('reference_number', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('case_size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('photo', models.URLField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('owned', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=200)),
                ('year_released', models.IntegerField(blank=True, null=True)),
                ('year_specificity', models.CharField(blank=True, choices=[('exact', 'Exact'), ('year', 'Year'), ('decade', 'Decade'), ('century', 'Century'), ('millennium', 'Millennium'), ('unknown', 'Unknown')], max_length=50, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=100, null=True)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=50, null=True)),
                ('cover', models.URLField(blank=True, null=True)),
                ('external_links', models.JSONField(blank=True, null=True)),
                ('ISBN', models.CharField(blank=True, max_length=20, null=True)),
                ('series', models.CharField(blank=True, max_length=200, null=True)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('edition', models.CharField(blank=True, max_length=50, null=True)),
                ('owned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='read_entries', to='collections_site.bookcollection')),
            ],
        ),
        migrations.CreateModel(
            name='Extras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.BooleanField(default=False)),
                ('brand', models.CharField(blank=True, max_length=200, null=True)),
                ('model', models.CharField(max_length=200)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('links', models.JSONField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('year_specificity', models.CharField(blank=True, choices=[('exact', 'Exact'), ('year', 'Year'), ('decade', 'Decade'), ('century', 'Century'), ('millennium', 'Millennium'), ('unknown', 'Unknown')], max_length=50, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='collections_site.extrascategory')),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.CharField(blank=True, max_length=200, null=True)),
                ('cast', models.JSONField(blank=True, null=True)),
                ('crew', models.JSONField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('external_links', models.JSONField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('festival', models.CharField(blank=True, max_length=200, null=True)),
                ('rewatch_count', models.IntegerField(default=0)),
                ('poster', models.URLField(blank=True, null=True)),
                ('background_pic', models.URLField(blank=True, null=True)),
                ('medium', models.CharField(blank=True, max_length=50, null=True)),
                ('sound', models.BooleanField(default=True)),
                ('colour', models.BooleanField(default=True)),
                ('runtime', models.DurationField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=100, null=True)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('awards_won', models.JSONField(blank=True, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('box_office', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('owned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seen_entries', to='collections_site.filmcollection')),
            ],
        ),
    ]
